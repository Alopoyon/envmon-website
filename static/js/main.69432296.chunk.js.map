{"version":3,"sources":["components/globalStyles.js","components/Themes.js","components/ToggleButton.js","components/Toggler.js","components/firebaseConfig.js","components/RadioButton.js","components/colorset.js","components/initialstate.js","Main.js","components/useDarkMode.js","components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalStyles","createGlobalStyle","theme","body","text","lightTheme","toggleBorder","background","buttoncolor","darkTheme","CheckedIcon","UncheckedIcon","ToggleButton","props","useState","toggle","setToggle","defaultChecked","onChange","disabled","className","toggleTheme","daynight","useEffect","getIcon","type","icons","undefined","defaultProps","toggleClasses","classNames","onClick","sethumtemp","aria-label","checked","unchecked","Toggle","config","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","RadioButton","id","name","changed","isSelected","colorset","initialState","Checkbox","fnClick","title","e","target","Main","handleLogout","firebaseconfig","humtemp","radios","setradios","fd","setfd","td","settd","ln","setln","useReducer","state","action","snchk","setsnchk","handleradios","refresht","sensorname","Object","keys","setTheme","mountedComponent","setMountedComponent","setMode","mode","window","localStorage","setItem","localTheme","getItem","useDarkMode","themeToggler","themeMode","onClickCapture","path","orderByKey","d","value","sensorchk","temppoints","map","keyName","keyIndex","plot1","hum","humIndex","obj","x","y","Number","temppoint","points","color","snr","push","filter","element","slice","Math","max","length","class","width","heighr","data","interpolate","ticks","xLabel","yLabel","xParser","Date","xDisplay","toLocaleString","onPointHover","point","ListGroup","key","index","Item","style","backgroundColor","height","v","htmlFor","_d","getTime","inputProps","Login","email","setEmail","password","setPassword","handleLogin","emailError","handleSignUp","hasAccount","setHasAccount","passwordError","autoFocus","required","App","user","setUser","setEmailError","setPasswordError","clearErrors","auth","createUserWithEmailAndPassword","catch","err","code","message","authListener","onAuthStateChanged","signOut","signInWithEmailAndPassword","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69432296.chunk.js","sourcesContent":["import { createGlobalStyle} from \"styled-components\"\r\nexport const GlobalStyles = createGlobalStyle`\r\n  body {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\r\n    transition: all 0.50s linear;\r\n  }\r\n\r\n  .changediv{\r\n  background: ${({ theme }) => theme.body};\r\n  }\r\n\r\n  .rdtPicker{\r\n    background: ${({ theme }) => theme.body};\r\n    }\r\n  .popup{\r\n    color: #000000\r\n  }\r\n  .svg-line-chart-label{\r\n    fill: ${({ theme }) => theme.text};\r\n    margin: 100px;\r\n  }\r\n\r\n  .tick text{\r\n    fill: ${({ theme }) => theme.text};\r\n    transform: rotate(90);\r\n  }\r\n\r\n  svg{\r\n    height: 750px;\r\n  }\r\n\r\n  `","export const lightTheme = {\r\n    body: '#FFF',\r\n    text: '#363537',\r\n    toggleBorder: '#FFF',\r\n    background: '#363537',\r\n    buttoncolor: '#FFF'\r\n}\r\nexport const darkTheme = {\r\n    body: '#363537',\r\n    text: '#FAFAFA',\r\n    toggleBorder: '#6B8096',\r\n    background: '#999',\r\n    buttoncolor: '#000'\r\n}","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nconst CheckedIcon = () => <>🌜</>;\r\nconst UncheckedIcon = () => <>🌞</>;\r\n\r\nconst ToggleButton = ( props ) => {\r\n\r\n    const [toggle, setToggle] = useState(false);\r\n    const { defaultChecked, onChange, disabled, className, toggleTheme, daynight } = props;\r\n\r\n    useEffect(() => {\r\n        if (defaultChecked) {\r\n            setToggle(defaultChecked)\r\n        }\r\n    }, [defaultChecked]);\r\n\r\n    const triggerToggle = () => {\r\n        if ( disabled ) {\r\n            return;\r\n        }\r\n        if(daynight)\r\n            toggleTheme();\r\n        \r\n        else{\r\n            var {sethumtemp} = props;\r\n            if(!toggle)\r\n                sethumtemp(\"temp/\");\r\n            else\r\n                sethumtemp(\"hum/\")\r\n        }\r\n        setToggle(!toggle);\r\n\r\n\r\n        if ( typeof onChange === 'function' ) {\r\n            onChange(!toggle);\r\n        }\r\n    }\r\n\r\n    const getIcon = (type) => {\r\n        const { icons } = props;\r\n        if ( ! icons ) {\r\n            return null;\r\n        }\r\n\r\n        return icons[type] === undefined ?\r\n            ToggleButton.defaultProps.icons[type] :\r\n            icons[type];\r\n    }\r\n\r\n    const toggleClasses = classNames('wrg-toggle', {\r\n        'wrg-toggle--checked': toggle,\r\n        'wrg-toggle--disabled': disabled\r\n    }, className);\r\n\r\n    return (\r\n        <div onClick={triggerToggle} className={toggleClasses}>\r\n            <div className=\"wrg-toggle-container\">\r\n                <div className=\"wrg-toggle-check\">\r\n                    <span>{ getIcon('checked') }</span>\r\n                </div>\r\n                <div className=\"wrg-toggle-uncheck\">\r\n                    <span>{ getIcon('unchecked') }</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"wrg-toggle-circle\"></div>\r\n            <input type=\"checkbox\" aria-label=\"Toggle Button\" className=\"wrg-toggle-input\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nToggleButton.defaultProps = {\r\n    icons: {\r\n        checked: <CheckedIcon />, \r\n        unchecked: <UncheckedIcon />\r\n    }\r\n};\r\n\r\nToggleButton.propTypes = {\r\n    disabled: PropTypes.bool,\r\n    defaultChecked: PropTypes.bool,\r\n    className: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    icons: PropTypes.oneOfType([\r\n        PropTypes.bool,\r\n        PropTypes.shape({\r\n            checked: PropTypes.node,\r\n            unchecked: PropTypes.node\r\n        })\r\n    ])\r\n};\r\n\r\nexport default ToggleButton;\r\n","import React from 'react'\r\nimport { func, string } from 'prop-types';\r\nimport '../App.scss';\r\n\r\nimport ToggleButton from './ToggleButton'\r\n\r\nconst Toggle = ({theme,  toggleTheme }) => {\r\n    return (\r\n      <ToggleButton toggleTheme={toggleTheme} daynight={true} />\r\n    );\r\n};\r\nToggle.propTypes = {\r\n    theme: string.isRequired,\r\n    toggleTheme: func.isRequired,\r\n}\r\nexport default Toggle;","import firebase from 'firebase'\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_apiKey,\r\n    authDomain: process.env.REACT_APP_authDomain,\r\n    databaseURL: process.env.REACT_APP_databaseURL,\r\n    projectId: process.env.REACT_APP_projectId,\r\n    storageBucket: process.env.REACT_APP_storageBucket,\r\n    messagingSenderId: process.env.REACT_APP_messagingSenderId,\r\n    appId: process.env.REACT_APP_appId,\r\n    measurementId: process.env.REACT_APP_measurementId\r\n};\r\nconst config = firebase.initializeApp(firebaseConfig);\r\nexport default config;","import React from \"react\";\r\n\r\nconst RadioButton = (props) => {\r\n    return (\r\n            <input id={props.id} name={props.id} onChange={props.changed} type=\"radio\" checked={props.isSelected} />\r\n    );\r\n}\r\n\r\nexport default RadioButton;","var colorset = \r\n    [ '#FF6633', '#FFB399', '#FF33FF', '#FFFF99', '#00B3E6', \r\n\t  '#E6B333', '#3366E6', '#999966', '#99FF99', '#B34D4D',\r\n\t  '#80B300', '#809900', '#E6B3B3', '#6680B3', '#66991A', \r\n\t  '#FF99E6', '#CCFF1A', '#FF1A66', '#E6331A', '#33FFCC',\r\n\t  '#66994D', '#B366CC', '#4D8000', '#B33300', '#CC80CC', \r\n\t  '#66664D', '#991AFF', '#E666FF', '#4DB3FF', '#1AB399',\r\n\t  '#E666B3', '#33991A', '#CC9999', '#B3B31A', '#00E680', \r\n\t  '#4D8066', '#809980', '#E6FF80', '#1AFF33', '#999933',\r\n\t  '#FF3380', '#CCCC00', '#66E64D', '#4D80CC', '#9900B3', \r\n\t  '#E64D66', '#4DB380', '#FF4D4D', '#99E6E6', '#6666FF'\r\n    ];\r\nexport default colorset;","var initialState= {\r\n    \"Control Room\":true,\r\n    \"Conveyer Belt 1\": true,\r\n    \"Conveyer Belt 2\": true,\r\n    \"Manager's Cabin\": true,\r\n    \"Office Central\": true,\r\n    \"Office Corner 1\": true,\r\n    \"Office Corner 2\": true,\r\n    \"Office Corner 3\": true,\r\n    \"Office Corner 4\": true,\r\n    \"Storage Room\": true\r\n};\r\nexport default initialState;","import React, { useState,useReducer} from 'react';\r\n\r\nimport {ThemeProvider} from \"styled-components\";\r\nimport  {useDarkMode} from \"./components/useDarkMode\"\r\nimport { GlobalStyles } from \"./components/globalStyles\";\r\nimport { lightTheme, darkTheme } from \"./components/Themes\";\r\nimport Toggle from \"./components/Toggler\";\r\nimport ToggleButton from './components/ToggleButton'\r\n\r\nimport config from './components/firebaseConfig';\r\nimport firebase from 'firebase/app';\r\nimport './App.scss'\r\nimport 'firebase/database';\r\nimport {FirebaseDatabaseProvider, FirebaseDatabaseNode} from \"@react-firebase/database\";\r\n\r\nimport LineChart from 'react-linechart';\r\nimport '../node_modules/react-linechart/dist/styles.css';\r\n\r\nimport \"./components/react-datetime.css\";\r\nimport Datetime from \"react-datetime\";\r\n\r\nimport RadioButton from \"./components/RadioButton.js\";\r\n\r\nimport colorset from \"./components/colorset\";\r\nimport initialState from \"./components/initialstate\";\r\n\r\nimport {ListGroup} from 'react-bootstrap';\r\n\r\nconst Checkbox = ({ fnClick, title = \"\", checked = false }) => {\r\n  return(<label>\r\n    <input\r\n      onChange={e => {\r\n        if (fnClick !== undefined) fnClick(e.target.checked);\r\n      }}\r\n      onClick={e => {\r\n        if (fnClick !== undefined) fnClick(e.target.checked);\r\n      }}\r\n      type=\"checkbox\"\r\n      checked={checked}\r\n    />\r\n    {title}\r\n  </label>)\r\n}\r\n\r\n\r\nconst Main =({handleLogout})=> {\r\n\r\n  const [firebaseconfig,setconfig]=useState(config);\r\n  var [humtemp, sethumtemp] = useState(\"temp/\");\r\n  var [radios,setradios] = useState(\"all\");\r\n  var [fd,setfd]=useState(0);\r\n  var [td,settd]=useState(0);\r\n  var [ln,setln]=useState(0);\r\n\r\n  const reducer = (state, action) => ({ ...state, ...action });\r\n  const [snchk, setsnchk] =useReducer(reducer, initialState);\r\n\r\n  var handleradios =e=>{\r\n      setradios(e.target.id)\r\n  }\r\n\r\n  var refresht = ()=>{\r\n    if(humtemp===\"temp/\"){\r\n      sethumtemp(\"hum/\");\r\n    }\r\n    else{\r\n      sethumtemp(\"temp/\");\r\n    }\r\n  }\r\n\r\n  var sensorname=Object.keys(snchk);\r\n\r\n  const [theme, themeToggler, mountedComponent] = useDarkMode();\r\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\r\n\r\n  if(!mountedComponent) return <div/>\r\n  return (\r\n    <section className=\"mainBody\">\r\n      <nav>\r\n        <h2> EnvMon </h2>\r\n\r\n        <Toggle theme={theme} toggleTheme={themeToggler} />\r\n        <ToggleButton  daynight={false} icons={{checked: \"🌡\", unchecked: \"💦\"}} sethumtemp={sethumtemp} defaultChecked={true}/>\r\n        <button onClick={refresht} onClickCapture={refresht}>Refresh</button>\r\n        <button onClick={handleLogout}>Logout</button>\r\n        \r\n      </nav>\r\n\r\n      <ThemeProvider theme={themeMode}>\r\n        <>\r\n          <GlobalStyles/>\r\n      \r\n          <div className=\"App\">\r\n            <FirebaseDatabaseProvider firebase={firebase} {...firebaseconfig}>\r\n              \r\n              <h4>{humtemp===\"temp/\"?\"Temperature\":\"Humidity\"}</h4>\r\n              <FirebaseDatabaseNode\r\n                path={humtemp}\r\n                orderByKey\r\n              >\r\n                {d=>{\r\n                  if(d.value!=null)\r\n                  {\r\n                    var sensorchk=[];\r\n                    var temppoints=Object.keys(d.value).map(function(keyName, keyIndex) {\r\n                      if(snchk[keyName]){\r\n                      \r\n                        var plot1=Object.keys(d.value[keyName]).map(function(hum, humIndex) {\r\n                          var obj={x:null,y:null};\r\n                          obj.x=Number(hum);\r\n                          obj.y=d.value[keyName][hum];\r\n                          return obj;\r\n                        });\r\n                        var temppoint={points:null, name:\"\"};\r\n                        temppoint.name=keyName;\r\n                        temppoint.color=colorset[keyIndex];\r\n                        temppoint.points=plot1;\r\n                        var snr={};\r\n                        snr[keyName]=false;\r\n                        sensorchk.push(snr);\r\n                        if(radios===\"fromdate\"){\r\n                          temppoint.points=temppoint.points.filter(function(element){\r\n                            if(element.x>=fd)\r\n                              return element;\r\n                          });\r\n                        }\r\n                        else if(radios===\"between\"){\r\n                          temppoint.points=temppoint.points.filter(function(element){\r\n                            if(element.x>=fd&&element.x<=td)\r\n                              return element;\r\n                          });\r\n                        }\r\n                        else if(radios===\"lastn\"){\r\n                          temppoint.points=temppoint.points.slice(Math.max(temppoint.points.length - ln, 0))\r\n                        }\r\n                        return temppoint;\r\n                      }\r\n                      \r\n                    });\r\n                    \r\n                    temppoints = temppoints.filter(function( element ) {\r\n                      return element !== undefined;\r\n                   });\r\n                    var setsensorchk=(sensorname)=>{\r\n                      sensorchk[sensorname]=!sensorchk[sensorname];\r\n                    }\r\n                    return(\r\n                    <div className=\"row\">\r\n                      <div className=\"col-lg-10\">\r\n                        <LineChart \r\n                          id={\"thechart\"}\r\n                          class={\"thechart\"}\r\n                          width={1300}\r\n                          heighr={720}\r\n                          data={temppoints}\r\n                          interpolate={\"linear\"}\r\n                          ticks={10}\r\n                          xLabel={\"TimeStamp\"}\r\n                          yLabel={humtemp===\"temp/\"?\"Temperature\":\"Humidity\"}\r\n                          xParser={e=>new Date(e)}\r\n                          xDisplay={e=>\r\n                            {\r\n                              var dt= new Date(e)\r\n                              return(dt.toLocaleString())\r\n                            }\r\n                          }\r\n                          onPointHover={(point)=> {\r\n                            return `<p class=\"popup\"><b>X value:</b> ${new Date(point.x)}</p><p class=\"popup\"><b>Y value:</b> ${point.y}</p>`\r\n                          }}\r\n                        />                        \r\n                      </div>\r\n                      <div className=\"col-lg-2\">\r\n                      <ListGroup >\r\n                        {\r\n                          temppoints.map((key,index)=>{\r\n                            return(\r\n                            <ListGroup.Item className=\"changediv\" key={index}>\r\n                              <div className=\"row changediv\">\r\n                              <div className=\"col-1 changediv\"><div style={{backgroundColor:key.color, width:\"10px\", height:\"10px\"}}></div></div> \r\n                              <div className=\"col changediv\">\r\n                                {key.name}\r\n                              </div>\r\n                              </div>\r\n                            </ListGroup.Item>)\r\n                          })\r\n                        }\r\n                        \r\n                      </ListGroup>\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                  }\r\n                  else return null\r\n                  \r\n                }}\r\n            </FirebaseDatabaseNode>\r\n            </FirebaseDatabaseProvider>\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-2\">\r\n                <form>\r\n                  {\r\n                    sensorname.map((value)=>{\r\n                      return(\r\n                        <>\r\n                        <Checkbox\r\n                          title={value}\r\n                          fnClick={v => setsnchk({[value]:v})}\r\n                          checked={snchk[value]}\r\n                        /><br/>\r\n                        </>\r\n                      )\r\n                    })\r\n                  }\r\n                </form>\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <form>\r\n                  <RadioButton \r\n                    changed={handleradios} \r\n                    id=\"all\" \r\n                    isSelected={ radios === \"all\" }  \r\n                  />\r\n                  <label htmlFor=\"all\">All data</label><br></br>\r\n                  <RadioButton \r\n                    changed={handleradios} \r\n                    id=\"lastn\" \r\n                    isSelected={ radios === \"lastn\" }  \r\n                  />\r\n                  <label htmlFor=\"lastn\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col\">\r\n                        Last{\" \"}\r\n                      </div>\r\n                      <div className=\"col\">\r\n                        <input type=\"number\" onChange={e=>setln(e.target.value)} id=\"lastvals\" name=\"lastvals\" disabled={radios!==\"lastn\"}/> \r\n                      </div>\r\n                      <div className=\"col\">\r\n                        {\" \"}data\r\n                      </div>\r\n                    </div>\r\n                  </label><br></br>\r\n                  <RadioButton \r\n                    changed={ handleradios } \r\n                    id=\"fromdate\" \r\n                    isSelected={ radios === \"fromdate\" }  \r\n                  />\r\n                  <label htmlFor=\"fromdate\">\r\n                    <div className=\"row\">\r\n                    <div className=\"col-4\">\r\n                      Data from{\" \"}\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <Datetime className=\"changediv\" onChange={e=>setfd(e._d.getTime())} inputProps={{disabled: radios!==\"fromdate\"}} />\r\n                    </div>\r\n                    </div>\r\n                    \r\n                  </label><br></br>\r\n                  <RadioButton \r\n                    changed={ handleradios } \r\n                    id=\"between\" \r\n                    isSelected={ radios === \"between\" }  \r\n                  />\r\n                  <label htmlFor=\"between\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                      Data between \r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <Datetime className=\"changediv\" onChange={e=>setfd(e._d.getTime())} inputProps={{disabled: radios!==\"between\"}}/>\r\n                    </div>  \r\n                    <div className=\"col-1\">\r\n                    and{\" \"}\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <Datetime className=\"changediv\" onChange={e=>settd(e._d.getTime())} inputProps={{disabled: radios!==\"between\"}}/>\r\n                    </div>\r\n                  </div>\r\n                  </label><br></br>\r\n\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      </ThemeProvider>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Main;","import { useEffect, useState } from 'react';\r\nexport const useDarkMode = () => {\r\n    const [theme, setTheme] = useState('light');\r\n    const [mountedComponent, setMountedComponent] = useState(false)\r\n    const setMode = mode => {\r\n        window.localStorage.setItem('theme', mode)\r\n        setTheme(mode)\r\n    };\r\n    const themeToggler = () => {\r\n        theme === 'light' ? setMode('dark') : setMode('light')\r\n    };\r\n    useEffect(() => {\r\n        const localTheme = window.localStorage.getItem('theme');\r\n        localTheme ? setTheme(localTheme) : setMode('light')\r\n        setMountedComponent(true)\r\n    }, []);\r\n    return [theme, themeToggler, mountedComponent]\r\n};","import React from 'react'\r\nimport './Components.css'\r\nconst Login = (props) =>{\r\n    const {\r\n        email,\r\n        setEmail,\r\n        password,\r\n        setPassword,\r\n        handleLogin,\r\n        handleSignUp,\r\n        hasAccount,\r\n        setHasAccount,\r\n        emailError,\r\n        passwordError,\r\n    } = props;\r\n    \r\n    // function errorFunction(){\r\n    //     alert({passwordError});\r\n    // }\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"form\">\r\n                <label htmlFor=\"email\" className=\"email\">Email</label><br/><br/>\r\n                <input \r\n                    type=\"email\"\r\n                    autoFocus \r\n                    required \r\n                    value={email}\r\n                    onChange={e=> setEmail(e.target.value)}\r\n                    className=\"emailinp\"\r\n                />\r\n                <p className=\"errorMsg\">{emailError}</p>\r\n                <div className=\"space\">                </div>\r\n                <label htmlFor=\"password\" className=\"password\">Password</label><br/><br/>\r\n                <input \r\n                    type=\"password\" \r\n                    required \r\n                    value={password} \r\n                    onChange={e=> setPassword(e.target.value)}\r\n                    className=\"passwordinp\"\r\n                />\r\n                <p className=\"errorMsg\">{passwordError}</p>\r\n                \r\n            </div>\r\n            <div className=\"space\">                </div>\r\n            <div className=\"divbtnLogin\">\r\n                \r\n                    <button onClick={handleLogin}className=\"btnLogin\">\r\n                        Login\r\n                    </button>\r\n                  \r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\nexport default Login","import React,{useState,useEffect} from 'react'\r\nimport Main from './Main';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport config from './components/firebaseConfig';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\nimport \"./App.scss\";\r\n\r\nconst App = ()=> {\r\n\r\n  const[user,setUser]=useState('');\r\n  const[email,setEmail]=useState('');\r\n  const[password,setPassword]=useState('');\r\n  const[emailError,setEmailError]=useState('');\r\n  const[passwordError,setPasswordError]=useState('');\r\n  const[hasAccount,setHasAccount]=useState(false);\r\n\r\n  const clearInputs = () => {\r\n    setEmail('');\r\n    setPassword('');\r\n  }\r\n\r\n  const clearErrors = () => {\r\n    setEmailError('');\r\n    setPasswordError('');\r\n  }\r\n  \r\n  const handleLogin = () => {\r\n    clearErrors();\r\n    config\r\n      .auth()\r\n      .signInWithEmailAndPassword(email,password)\r\n      .catch( (err) =>{\r\n        switch(err.code){\r\n          case \"auth/invalid-email\":\r\n          case \"auth/user-disabled\":\r\n          case \"auth/user-not-found\":\r\n            setEmailError(err.message);\r\n            break;\r\n          case \"auth/wrong-password\":\r\n            setPasswordError(err.message);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleSignUp = () => {\r\n    clearErrors();\r\n    config\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email,password)\r\n      .catch( (err) =>{\r\n        switch(err.code){\r\n          case \"auth/email-in-use\":\r\n          case \"auth/invalid-email\":\r\n            setEmailError(err.message);\r\n            break;\r\n          case \"auth/weak-password\":\r\n            setPasswordError(err.message);\r\n            break;\r\n          default:\r\n              break;\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    config.auth().signOut();\r\n  };\r\n\r\n\r\n  const authListener = () => {\r\n    config.auth().onAuthStateChanged((user) =>{\r\n      if(user){\r\n        clearInputs();\r\n        setUser(user);\r\n      }\r\n      else{\r\n        setUser(\"\");\r\n      }\r\n    })\r\n  };\r\n\r\n  useEffect( () =>{\r\n    authListener();\r\n  },[])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {\r\n        user?(\r\n          <Main handleLogout={handleLogout} handleSignUp={handleSignUp}/>\r\n        ):(\r\n          \r\n          <Login \r\n          email={email} \r\n          setEmail={setEmail} \r\n          password={password} \r\n          setPassword={setPassword} \r\n          handleLogin={handleLogin}\r\n          handleSignUp={handleSignUp}\r\n          hasAccount={hasAccount}\r\n          setHasAccount={setHasAccount}\r\n          emailError={emailError}\r\n          passwordError={passwordError}/> \r\n        )\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}