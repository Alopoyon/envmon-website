{"version":3,"sources":["components/globalStyles.js","components/Themes.js","components/ToggleButton.js","components/Toggler.js","components/firebaseConfig.js","components/RadioButton.js","Main.js","components/useDarkMode.js","components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalStyles","createGlobalStyle","theme","body","text","lightTheme","toggleBorder","background","buttoncolor","darkTheme","CheckedIcon","UncheckedIcon","ToggleButton","props","useState","toggle","setToggle","defaultChecked","onChange","disabled","className","toggleTheme","daynight","useEffect","getIcon","type","icons","undefined","defaultProps","toggleClasses","classNames","onClick","sethumtemp","aria-label","checked","unchecked","Toggle","config","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","RadioButton","id","name","changed","isSelected","Checkbox","fnClick","title","e","target","Main","handleLogout","firebaseconfig","humtemp","radios","setradios","fd","setfd","td","settd","ln","setln","colorset","useReducer","state","action","snchk","setsnchk","handleradios","refresht","sensorname","Object","keys","setTheme","mountedComponent","setMountedComponent","setMode","mode","window","localStorage","setItem","localTheme","getItem","useDarkMode","themeToggler","themeMode","onClickCapture","path","orderByKey","d","value","sensorchk","temppoints","map","keyName","keyIndex","plot1","hum","humIndex","obj","x","y","Number","temppoint","points","color","snr","push","filter","element","slice","Math","max","length","console","log","class","width","heighr","data","interpolate","ticks","xLabel","yLabel","xParser","Date","xDisplay","toLocaleString","onPointHover","point","ListGroup","key","index","Item","style","backgroundColor","height","v","htmlFor","_d","getTime","inputProps","Login","email","setEmail","password","setPassword","handleLogin","emailError","handleSignUp","hasAccount","setHasAccount","passwordError","autoFocus","required","App","user","setUser","setEmailError","setPasswordError","clearErrors","auth","createUserWithEmailAndPassword","catch","err","code","message","authListener","onAuthStateChanged","signOut","signInWithEmailAndPassword","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15c41579.chunk.js","sourcesContent":["import { createGlobalStyle} from \"styled-components\"\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\n    transition: all 0.50s linear;\n  }\n\n  .changediv{\n  background: ${({ theme }) => theme.body};\n  }\n\n  .rdtPicker{\n    background: ${({ theme }) => theme.body};\n    }\n  .popup{\n    color: #000000\n  }\n  .svg-line-chart-label{\n    fill: ${({ theme }) => theme.text};\n    margin: 100px;\n  }\n\n  .tick text{\n    fill: ${({ theme }) => theme.text};\n    transform: rotate(90);\n  }\n\n  svg{\n    height: 750px;\n  }\n\n  `","export const lightTheme = {\n    body: '#FFF',\n    text: '#363537',\n    toggleBorder: '#FFF',\n    background: '#363537',\n    buttoncolor: '#FFF'\n}\nexport const darkTheme = {\n    body: '#363537',\n    text: '#FAFAFA',\n    toggleBorder: '#6B8096',\n    background: '#999',\n    buttoncolor: '#000'\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst CheckedIcon = () => <>🌜</>;\nconst UncheckedIcon = () => <>🌞</>;\n\nconst ToggleButton = ( props ) => {\n\n    const [toggle, setToggle] = useState(false);\n    const { defaultChecked, onChange, disabled, className, toggleTheme, daynight } = props;\n\n    useEffect(() => {\n        if (defaultChecked) {\n            setToggle(defaultChecked)\n        }\n    }, [defaultChecked]);\n\n    const triggerToggle = () => {\n        if ( disabled ) {\n            return;\n        }\n        if(daynight)\n            toggleTheme();\n        \n        else{\n            var {sethumtemp} = props;\n            if(!toggle)\n                sethumtemp(\"temp/\");\n            else\n                sethumtemp(\"hum/\")\n        }\n        setToggle(!toggle);\n\n\n        if ( typeof onChange === 'function' ) {\n            onChange(!toggle);\n        }\n    }\n\n    const getIcon = (type) => {\n        const { icons } = props;\n        if ( ! icons ) {\n            return null;\n        }\n\n        return icons[type] === undefined ?\n            ToggleButton.defaultProps.icons[type] :\n            icons[type];\n    }\n\n    const toggleClasses = classNames('wrg-toggle', {\n        'wrg-toggle--checked': toggle,\n        'wrg-toggle--disabled': disabled\n    }, className);\n\n    return (\n        <div onClick={triggerToggle} className={toggleClasses}>\n            <div className=\"wrg-toggle-container\">\n                <div className=\"wrg-toggle-check\">\n                    <span>{ getIcon('checked') }</span>\n                </div>\n                <div className=\"wrg-toggle-uncheck\">\n                    <span>{ getIcon('unchecked') }</span>\n                </div>\n            </div>\n            <div className=\"wrg-toggle-circle\"></div>\n            <input type=\"checkbox\" aria-label=\"Toggle Button\" className=\"wrg-toggle-input\" />\n        </div>\n    );\n}\n\nToggleButton.defaultProps = {\n    icons: {\n        checked: <CheckedIcon />, \n        unchecked: <UncheckedIcon />\n    }\n};\n\nToggleButton.propTypes = {\n    disabled: PropTypes.bool,\n    defaultChecked: PropTypes.bool,\n    className: PropTypes.string,\n    onChange: PropTypes.func,\n    icons: PropTypes.oneOfType([\n        PropTypes.bool,\n        PropTypes.shape({\n            checked: PropTypes.node,\n            unchecked: PropTypes.node\n        })\n    ])\n};\n\nexport default ToggleButton;\n","import React from 'react'\nimport { func, string } from 'prop-types';\nimport '../App.scss';\n\nimport ToggleButton from './ToggleButton'\n\nconst Toggle = ({theme,  toggleTheme }) => {\n    return (\n      <ToggleButton toggleTheme={toggleTheme} daynight={true} />\n    );\n};\nToggle.propTypes = {\n    theme: string.isRequired,\n    toggleTheme: func.isRequired,\n}\nexport default Toggle;","import firebase from 'firebase'\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_apiKey,\n    authDomain: process.env.REACT_APP_authDomain,\n    databaseURL: process.env.REACT_APP_databaseURL,\n    projectId: process.env.REACT_APP_projectId,\n    storageBucket: process.env.REACT_APP_storageBucket,\n    messagingSenderId: process.env.REACT_APP_messagingSenderId,\n    appId: process.env.REACT_APP_appId,\n    measurementId: process.env.REACT_APP_measurementId\n};\nconst config = firebase.initializeApp(firebaseConfig);\nexport default config;","import React from \"react\";\n\nconst RadioButton = (props) => {\n    return (\n            <input id={props.id} name={props.id} onChange={props.changed} type=\"radio\" checked={props.isSelected} />\n    );\n}\n\nexport default RadioButton;","import React, { useState,useReducer} from 'react';\n\nimport {ThemeProvider} from \"styled-components\";\nimport  {useDarkMode} from \"./components/useDarkMode\"\nimport { GlobalStyles } from \"./components/globalStyles\";\nimport { lightTheme, darkTheme } from \"./components/Themes\"\nimport Toggle from \"./components/Toggler\";\nimport ToggleButton from './components/ToggleButton'\n\nimport config from './components/firebaseConfig';\nimport firebase from 'firebase/app';\nimport './App.scss'\nimport 'firebase/database';\nimport {FirebaseDatabaseProvider, FirebaseDatabaseNode} from \"@react-firebase/database\";\n\nimport LineChart from 'react-linechart';\nimport '../node_modules/react-linechart/dist/styles.css';\n\nimport \"./components/react-datetime.css\";\nimport Datetime from \"react-datetime\";\n\nimport RadioButton from \"./components/RadioButton.js\";\n\nimport {ListGroup} from 'react-bootstrap';\n\nconst Checkbox = ({ fnClick, title = \"\", checked = false }) => {\n  return(<label>\n    <input\n      onChange={e => {\n         // console.log(fnClick)\n        if (fnClick !== undefined) fnClick(e.target.checked);\n      }}\n      onClick={e => {\n        if (fnClick !== undefined) fnClick(e.target.checked);\n      }}\n      type=\"checkbox\"\n      checked={checked}\n    />\n    {title}\n  </label>)\n}\n\n\n\nconst Main =({handleLogout})=> {\n\n  const [firebaseconfig,setconfig]=useState(config);\n  var [humtemp, sethumtemp] = useState(\"temp/\");\n  var [radios,setradios] = useState(\"all\");\n  var [fd,setfd]=useState(0);\n  var [td,settd]=useState(0);\n  var [ln,setln]=useState(0);\n\n  var colorset = \n    [ '#FF6633', '#FFB399', '#FF33FF', '#FFFF99', '#00B3E6', \n\t\t  '#E6B333', '#3366E6', '#999966', '#99FF99', '#B34D4D',\n\t\t  '#80B300', '#809900', '#E6B3B3', '#6680B3', '#66991A', \n\t\t  '#FF99E6', '#CCFF1A', '#FF1A66', '#E6331A', '#33FFCC',\n\t\t  '#66994D', '#B366CC', '#4D8000', '#B33300', '#CC80CC', \n\t\t  '#66664D', '#991AFF', '#E666FF', '#4DB3FF', '#1AB399',\n\t\t  '#E666B3', '#33991A', '#CC9999', '#B3B31A', '#00E680', \n\t\t  '#4D8066', '#809980', '#E6FF80', '#1AFF33', '#999933',\n\t\t  '#FF3380', '#CCCC00', '#66E64D', '#4D80CC', '#9900B3', \n\t\t  '#E64D66', '#4DB380', '#FF4D4D', '#99E6E6', '#6666FF'];\n\n  var initialState= {\n    \"Control Room\":true,\n    \"Conveyer Belt 1\": true,\n    \"Conveyer Belt 2\": true,\n    \"Manager's Cabin\": true,\n    \"Office Central\": true,\n    \"Office Corner 1\": true,\n    \"Office Corner 2\": true,\n    \"Office Corner 3\": true,\n    \"Office Corner 4\": true,\n    \"Storage Room\": true\n  };\n\n  const reducer = (state, action) => ({ ...state, ...action });\n  const [snchk, setsnchk] =useReducer(reducer, initialState);\n\n  var handleradios =e=>{\n      setradios(e.target.id)\n  }\n\n  var refresht = ()=>{\n    if(humtemp===\"temp/\"){\n      sethumtemp(\"hum/\");\n    }\n    else{\n      sethumtemp(\"temp/\");\n    }\n  }\n\n  var sensorname=Object.keys(snchk);\n\n  const [theme, themeToggler, mountedComponent] = useDarkMode();\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\n\n  if(!mountedComponent) return <div/>\n  return (\n    <section className=\"mainBody\">\n      <nav>\n        <h2> EnvMon </h2>\n\n        <Toggle theme={theme} toggleTheme={themeToggler} />\n        <ToggleButton  daynight={false} icons={{checked: \"🌡\", unchecked: \"💦\"}} sethumtemp={sethumtemp} defaultChecked={true}/>\n        <button onClick={refresht} onClickCapture={refresht}>Refresh</button>\n        <button onClick={handleLogout}>Logout</button>\n        \n      </nav>\n\n      <ThemeProvider theme={themeMode}>\n        <>\n          <GlobalStyles/>\n      \n          <div className=\"App\">\n            <FirebaseDatabaseProvider firebase={firebase} {...firebaseconfig}>\n              \n              <h4>{humtemp===\"temp/\"?\"Temperature\":\"Humidity\"}</h4>\n              <FirebaseDatabaseNode\n                path={humtemp}\n                orderByKey\n                // orderByValue={\"created_on\"}\n              >\n                {d=>{\n                  if(d.value!=null)\n                  {\n                    var sensorchk=[];\n                    var temppoints=Object.keys(d.value).map(function(keyName, keyIndex) {\n                      if(snchk[keyName]){\n                      \n                        var plot1=Object.keys(d.value[keyName]).map(function(hum, humIndex) {\n                          var obj={x:null,y:null};\n                          obj.x=Number(hum);\n                          //var milliseconds=Number(hum);\n                          //obj.x = new Date(milliseconds);\n                          obj.y=d.value[keyName][hum];\n                          return obj;\n                        });\n                        var temppoint={points:null, name:\"\"};\n                        temppoint.name=keyName;\n                        temppoint.color=colorset[keyIndex];\n                        temppoint.points=plot1;\n                        var snr={};\n                        snr[keyName]=false;\n                        sensorchk.push(snr);\n                        if(radios===\"fromdate\"){\n                          temppoint.points=temppoint.points.filter(function(element){\n                            if(element.x>=fd)\n                              return element;\n                          });\n                        }\n                        else if(radios===\"between\"){\n                          temppoint.points=temppoint.points.filter(function(element){\n                            if(element.x>=fd&&element.x<=td)\n                              return element;\n                          });\n                        }\n                        else if(radios===\"lastn\"){\n                          temppoint.points=temppoint.points.slice(Math.max(temppoint.points.length - ln, 0))\n                        }\n                        // console.log(temppoint)\n                        return temppoint;\n                      }\n                      \n                    });\n                    // console.log(td);\n                    // console.log(fd);\n                    // console.log(radios);\n                    \n                    temppoints = temppoints.filter(function( element ) {\n                      return element !== undefined;\n                   });\n                    //console.log(temppoints)\n\n\n                    //setsnchk(Object.keys(d.value));\n                    //console.log(Object.keys(d.value));\n                    var setsensorchk=(sensorname)=>{\n                      sensorchk[sensorname]=!sensorchk[sensorname];\n                    }\n                    console.log(humtemp)\n                    return(\n                    <div className=\"row\">\n                      <div className=\"col-lg-10\">\n                        <LineChart \n                          id={\"thechart\"}\n                          class={\"thechart\"}\n                          width={1300}\n                          heighr={720}\n                          data={temppoints}\n                          interpolate={\"linear\"}\n                          ticks={10}\n                          xLabel={\"TimeStamp\"}\n                          yLabel={humtemp===\"temp/\"?\"Temperature\":\"Humidity\"}\n                          xParser={e=>new Date(e)}\n                          xDisplay={e=>\n                            {\n                              var dt= new Date(e)\n                              return(dt.toLocaleString())\n                            }\n                          }\n                          onPointHover={(point)=> {\n                            return `<p class=\"popup\"><b>X value:</b> ${new Date(point.x)}</p><p class=\"popup\"><b>Y value:</b> ${point.y}</p>`\n                          }}\n                          //margins={{ top: 150, right: 120, bottom:120 }}\n                        />                        \n                      </div>\n                      <div className=\"col-lg-2\">\n                      <ListGroup >\n                        {\n                          temppoints.map((key,index)=>{\n                            //console.log(key)\n                            return(\n                            <ListGroup.Item className=\"changediv\" key={index}>\n                              <div className=\"row changediv\">\n                              <div className=\"col-1 changediv\"><div style={{backgroundColor:key.color, width:\"10px\", height:\"10px\"}}></div></div> \n                              <div className=\"col changediv\">\n                                {key.name}\n                              </div>\n                              </div>\n                            </ListGroup.Item>)\n                          })\n                        }\n                        \n                      </ListGroup>\n                      </div>\n                    </div>\n                  )\n                  }\n                  else return null\n                  \n                }}\n            </FirebaseDatabaseNode>\n            </FirebaseDatabaseProvider>\n            <div className=\"row\">\n              <div className=\"col-sm-2\">\n                <form>\n                  {\n                    sensorname.map((value)=>{\n                      //console.log(snchk)\n                      return(\n                        <>\n                        <Checkbox\n                          title={value}\n                          fnClick={v => setsnchk({[value]:v})}\n                          checked={snchk[value]}\n                        /><br/>\n                        </>\n                      )\n                    })\n                  }\n                </form>\n              </div>\n              <div className=\"col-sm-6\">\n                <form>\n                  <RadioButton \n                    changed={handleradios} \n                    id=\"all\" \n                    isSelected={ radios === \"all\" }  \n                  />\n                  <label htmlFor=\"all\">All data</label><br></br>\n                  <RadioButton \n                    changed={handleradios} \n                    id=\"lastn\" \n                    isSelected={ radios === \"lastn\" }  \n                  />\n                  <label htmlFor=\"lastn\">\n                    <div className=\"row\">\n                      <div className=\"col\">\n                        Last{\" \"}\n                      </div>\n                      <div className=\"col\">\n                        <input type=\"number\" onChange={e=>setln(e.target.value)} id=\"lastvals\" name=\"lastvals\" disabled={radios!==\"lastn\"}/> \n                      </div>\n                      <div className=\"col\">\n                        {\" \"}data\n                      </div>\n                    </div>\n                  </label><br></br>\n                  <RadioButton \n                    changed={ handleradios } \n                    id=\"fromdate\" \n                    isSelected={ radios === \"fromdate\" }  \n                  />\n                  <label htmlFor=\"fromdate\">\n                    <div className=\"row\">\n                    <div className=\"col-4\">\n                      Data from{\" \"}\n                    </div>\n                    <div className=\"col\">\n                      <Datetime className=\"changediv\" onChange={e=>setfd(e._d.getTime())} inputProps={{disabled: radios!==\"fromdate\"}} />\n                    </div>\n                    </div>\n                    \n                  </label><br></br>\n                  <RadioButton \n                    changed={ handleradios } \n                    id=\"between\" \n                    isSelected={ radios === \"between\" }  \n                  />\n                  <label htmlFor=\"between\">\n                  <div className=\"row\">\n                    <div className=\"col-3\">\n                      Data between \n                    </div>\n                    <div className=\"col\">\n                      <Datetime className=\"changediv\" onChange={e=>setfd(e._d.getTime())} inputProps={{disabled: radios!==\"between\"}}/>\n                    </div>  \n                    <div className=\"col-1\">\n                    and{\" \"}\n                    </div>\n                    <div className=\"col\">\n                      <Datetime className=\"changediv\" onChange={e=>settd(e._d.getTime())} inputProps={{disabled: radios!==\"between\"}}/>\n                    </div>\n                  </div>\n                  </label><br></br>\n\n                </form>\n              </div>\n\n\n              {/* <Sensors vals={sensorname} setsnchk={setsnchk}/> */}\n            </div>\n          </div>\n        </>\n      </ThemeProvider>\n    </section>\n  )\n}\n\nexport default Main\n","import { useEffect, useState } from 'react';\nexport const useDarkMode = () => {\n    const [theme, setTheme] = useState('light');\n    const [mountedComponent, setMountedComponent] = useState(false)\n    const setMode = mode => {\n        window.localStorage.setItem('theme', mode)\n        setTheme(mode)\n    };\n    const themeToggler = () => {\n        theme === 'light' ? setMode('dark') : setMode('light')\n    };\n    useEffect(() => {\n        const localTheme = window.localStorage.getItem('theme');\n        localTheme ? setTheme(localTheme) : setMode('light')\n        setMountedComponent(true)\n    }, []);\n    return [theme, themeToggler, mountedComponent]\n};","import React from 'react'\nimport './Components.css'\nconst Login = (props) =>{\n    const {\n        email,\n        setEmail,\n        password,\n        setPassword,\n        handleLogin,\n        handleSignUp,\n        hasAccount,\n        setHasAccount,\n        emailError,\n        passwordError,\n    } = props;\n    \n    // function errorFunction(){\n    //     alert({passwordError});\n    // }\n    return (\n        <div className=\"login\">\n            <div className=\"form\">\n                <label htmlFor=\"email\" className=\"email\">Email</label><br/><br/>\n                <input \n                    type=\"email\"\n                    autoFocus \n                    required \n                    value={email}\n                    onChange={e=> setEmail(e.target.value)}\n                    className=\"emailinp\"\n                />\n                <p className=\"errorMsg\">{emailError}</p>\n                <div className=\"space\">                </div>\n                <label htmlFor=\"password\" className=\"password\">Password</label><br/><br/>\n                <input \n                    type=\"password\" \n                    required \n                    value={password} \n                    onChange={e=> setPassword(e.target.value)}\n                    className=\"passwordinp\"\n                />\n                <p className=\"errorMsg\">{passwordError}</p>\n                \n            </div>\n            <div className=\"space\">                </div>\n            <div className=\"divbtnLogin\">\n                \n                    <button onClick={handleLogin}className=\"btnLogin\">\n                        Login\n                    </button>\n                  \n            </div>\n        </div>\n        )\n    }\n\nexport default Login","import React,{useState,useEffect} from 'react'\nimport Main from './Main';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport config from './components/firebaseConfig';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\nimport \"./App.scss\";\n\nconst App = ()=> {\n\n  const[user,setUser]=useState('');\n  const[email,setEmail]=useState('');\n  const[password,setPassword]=useState('');\n  const[emailError,setEmailError]=useState('');\n  const[passwordError,setPasswordError]=useState('');\n  const[hasAccount,setHasAccount]=useState(false);\n\n  const clearInputs = () => {\n    setEmail('');\n    setPassword('');\n  }\n\n  const clearErrors = () => {\n    setEmailError('');\n    setPasswordError('');\n  }\n  \n  const handleLogin = () => {\n    clearErrors();\n    config\n      .auth()\n      .signInWithEmailAndPassword(email,password)\n      .catch( (err) =>{\n        switch(err.code){\n          case \"auth/invalid-email\":\n          case \"auth/user-disabled\":\n          case \"auth/user-not-found\":\n            setEmailError(err.message);\n            break;\n          case \"auth/wrong-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      });\n  };\n\n  const handleSignUp = () => {\n    clearErrors();\n    config\n      .auth()\n      .createUserWithEmailAndPassword(email,password)\n      .catch( (err) =>{\n        switch(err.code){\n          case \"auth/email-in-use\":\n          case \"auth/invalid-email\":\n            setEmailError(err.message);\n            break;\n          case \"auth/weak-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      });\n  };\n\n  const handleLogout = () => {\n    config.auth().signOut();\n  };\n\n\n  const authListener = () => {\n    config.auth().onAuthStateChanged((user) =>{\n      if(user){\n        clearInputs();\n        setUser(user);\n      }\n      else{\n        setUser(\"\");\n      }\n    })\n  };\n\n  useEffect( () =>{\n    authListener();\n  },[])\n\n  return (\n    <div className=\"App\">\n      {\n        user?(\n          <Main handleLogout={handleLogout} handleSignUp={handleSignUp}/>\n        ):(\n          \n          <Login \n          email={email} \n          setEmail={setEmail} \n          password={password} \n          setPassword={setPassword} \n          handleLogin={handleLogin}\n          handleSignUp={handleSignUp}\n          hasAccount={hasAccount}\n          setHasAccount={setHasAccount}\n          emailError={emailError}\n          passwordError={passwordError}/> \n        )\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}